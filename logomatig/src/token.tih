function get_token() : string =
let
    var token : string := ""
    var char : string := ""
in
(
    char := getchar();
    while char <> " " & char <> "" do
    (
        token := concat(token, char);
        char := getchar()
    );
    token
)
end

function get_token_int() : int =
let
    var num : int := 0
    var char : string := ""
    var ret : int := 0
in
(
    num := 0;
    char := getchar();
    while char <> " " & char <> "" & char <> "\n" do
    (
        if ret = -1 | ord(char) < 48 | ord(char) > 57 then
            ret := -1
        else
            num := num*10 + ord(char) - 48;
        char := getchar()
    );
    if ret = -1 then
        -1
    else
        num
)
end

type arr_of_str = array of string
function is_token(cmds : arr_of_str, str : string) : int =
(
    let
        var ret : int := 0
    in
        ret := 0;
        for i := 0 to 2 do
        (
            if strcmp(cmds[i] , str) = 1 then
                ret := 1
        );
        ret
    end
)

function print_tokens(token_list : tokens) =
(
    if token_list.next = nil then
    (
        print(token_list.token);
        print(" ");
        print_int(token_list.arg);
        print("\n")
    )
    else
    (
        print_tokens(token_list.next);
        print(token_list.token);
        print(" ");
        print_int(token_list.arg);
        print("\n")
    )
)
